@* @model BuildingManagment.Models.User *@
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - @* @Model.FirstName *@       </title>
    <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" />
    <link rel="stylesheet" href="~/css/site.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/BuildingManagment.styles.css" asp-append-version="true" />
</head>
<body>
    <header>
        <nav class="navbar navbar-expand-sm navbar-toggleable-sm navbar-light bg-white border-bottom box-shadow mb-3">
            <div class="container-fluid">
                <a class="navbar-brand" asp-area="" asp-controller="Home" asp-action="Index">BuildingManagment</a>
                <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target=".navbar-collapse" aria-controls="navbarSupportedContent"
                        aria-expanded="false" aria-label="Toggle navigation">
                    <span class="navbar-toggler-icon"></span>
                </button>
                <div class="navbar-collapse collapse d-sm-inline-flex justify-content-between">
                    <ul class="navbar-nav flex-grow-1">
                        <li class="nav-item">
                            <a class="nav-link text-dark" asp-area="" asp-controller="Home" asp-action="Index">Home</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link text-dark" asp-area="" asp-controller="Home" asp-action="Privacy">Privacy</a>
                        </li>
                        <li>
                            <button type="button" class="btn btn-primary position-relative">
                                Inbox
                                <span class="position-absolute top-0 start-100 translate-middle badge rounded-pill bg-danger">
                                    @ViewData["userCount"]
                                    <span class="visually-hidden">unread messages</span>
                                </span>
                            </button>
                        </li>
                    </ul>
                </div>
                <div>
                    @if (Context.Session.GetString("FullName") == null)
                    {  
                        <a asp-action="Register" asp-controller="Users" method="post">Register</a>
                        <a asp-action="Login" asp-controller="Users" method="post">Login</a>
                    }
                    else
                    {
                        @Context.Session.GetString("FullName")
                       
                        
                        <button id="showUsersButton" class="position-relative">
                            <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="blue" 
                            stroke="blue" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" 
                            class="feather feather-message-square"><path d="M21 15a2 2 0 0 1-2 2H7l-4 4V5a2 2 0 0 1 2-2h14a2 2 0 0 1 2 2z"></path></svg>
                            <span class="position-absolute top-0 start-100 translate-middle badge rounded-pill bg-danger">
                                @ViewBag.UnreadMessagesCount
                                <span class="visually-hidden"></span>
                            </span>
                        </button>
                        <a asp-action="Logout" asp-controller="Account">Logout</a>
                    }
                    
                </div>
            </div>

        </nav>
    </header>
    
    <div id="usersModal" class="modal fade" tabindex="-1" role="dialog">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title"><svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="blue" 
                        stroke="blue" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" 
                        class="feather feather-users"><path d="M17 21v-2a4 4 0 0 0-4-4H5a4 4 0 0 0-4 4v2"></path><circle cx="9" cy="7" 
                            r="4"></circle><path d="M23 21v-2a4 4 0 0 0-3-3.87"></path><path d="M16 3.13a4 4 0 0 1 0 7.75"></path></svg>Contacts</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
				<div class="modal-body">
				
                    <div class="mb-3">
                        <input type="text" id="searchInput" class="form-control" placeholder="Search users by name..." />
                    </div>
                   
                    <ul id="usersList" style="color:blue"  class="list-group"></ul> 
                </div>
                <div class="modal-footer">
                    
                    <button type="button" @* class="btn-close" *@ data-bs-dismiss="modal"  @* aria-label="Close" *@>Close</button>
                </div>
            </div>
        </div>
    </div>
    <!-- Scrollable modal -->
  

    <div id="chatModal" class="modal fade" tabindex="-1" role="dialog">
        <div class="modal-dialog " role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title"><svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="blue" stroke="blue" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-user"><path d="M20 21v-2a4 4 0 0 0-4-4H8a4 4 0 0 0-4 4v2"></path><circle cx="12" cy="7" r="4"></circle></svg>Chat</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <div id="chatHistory"></div>
                    
                    <textarea id="messageInput" class="form-control" rows="3" placeholder="Type your message here..."></textarea>
                
                    <button id="sendMessageButton" class="btn btn-primary mt-2"> <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="blue" stroke="blue" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-send"><line x1="22" y1="2" x2="11" y2="13"></line><polygon points="22 2 15 22 11 13 2 9 22 2"></polygon></svg>Send</button>
                </div>
                <div class="modal-footer">
                    
                    <button type="button" @* class="btn-close" *@ data-bs-dismiss="modal" aria-label="Close">Close</button>
                </div>
            </div>
        </div>
    </div>


    <div class="container">
        <main role="main" class="pb-3">
            @if (TempData["success"] != null)
            {
                    <div class="toast-container position-fixed bottom-0 end-0 p-3">
                    <div id="liveToast" class="toast" role="alert" aria-live="assertive" aria-atomic="true">
                        <div class="toast-header">
                            <img src="..." class="rounded me-2" alt="...">
                            <strong class="me-auto">Hey there</strong>
                            <small>@DateTime.Now</small>
                            <button type="button" class="btn-close" data-bs-dismiss="toast" aria-label="Close"></button>
                        </div>
                        <div class="toast-body">
                            @TempData["success"]
                        </div>
                    </div>
                </div>
                <div class="alert alert-success" role="alert">
                    @TempData["success"]
                </div>
                

            }
            @if (TempData["error"] != null)
            {
                <div class="alert alert-danger" role="alert">
                    @TempData["error"]
                </div>
                
            }
            @RenderBody()
        </main>
    </div>

    <footer class="border-top footer text-muted">
        <div class="container">
            &copy; 2024 - BuildingManagment - <a asp-area="" asp-controller="Home" asp-action="Privacy">Privacy</a>
        </div>
    </footer>
    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css">
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js"></script>

    <script src="~/js/site.js" asp-append-version="true"></script>

    <script type="text/javascript">
       
        $(document).ready(function () {
            let userList = []; 
            $('#showUsersButton').click(function () {
                $.ajax({
                    type: 'POST',
                    url: '@Url.Action("GetAllUsersWithChatSummary", "Chats")',
                    success: function (response) {
                        if (response.success) {
                            userList = response.users; 
                            displayUsers(userList);   
                            $('#searchInput').val(''); 
                            $('#usersModal').modal('show'); 
                        } else {
                            alert('Failed to load users. Please try again.');
                        }
                    },
                    error: function (xhr, status, error) {
                        console.error('Error fetching users:', error);
                        alert('An error occurred. Please try again.');
                    }
                });
            });

            
            $('#searchInput').on('input', function () {
                const searchTerm = $(this).val().toLowerCase(); // Get search term
                const filteredUsers = userList.filter(user =>
                    user.firstName.toLowerCase().includes(searchTerm) 
                );
                displayUsers(filteredUsers); 
            });

            
            function displayUsers(users) {
                $('#usersList').empty(); 
                if (users.length > 0) {
                    users.forEach(user => {
                        const unreadBadge = user.unreadMessagesCount > 0
                            ? `<span class="badge bg-danger float-end">${user.unreadMessagesCount}</span>`
                            : '';

                        $('#usersList').append(`
                        <li class="list-group-item user-item d-flex justify-content-between align-items-center" data-user-id="${user.id}">
                            <span>${user.firstName}</span>
                            ${unreadBadge}
                            
                        </li>
                    `);
                    });
                } else {
                    $('#usersList').append('<li class="list-group-item">No users found</li>');
                }
            }

            
            $(document).on('click', '.delete-chat', function () {
                const userId = $(this).data('user-id');
                deleteChat(userId); 
            });

            function deleteChat(userId) {
                $.ajax({
                    type: 'POST',
                    url: '@Url.Action("DeleteChatWithUser", "Chats")', 
                    data: { userId },
                    success: function (response) {
                        if (response.success) {
                            alert('Chat deleted successfully.');
                            userList = userList.filter(user => user.id !== userId); 
                            displayUsers(userList); 
                        } else {
                            alert('Failed to delete chat. Please try again.');
                        }
                    },
                    error: function (xhr, status, error) {
                        console.error('Error deleting chat:', error);
                        alert('An error occurred. Please try again.');
                    }
                });
            }

            
            $(document).on('click', '.user-item', function () {
                const partnerId = $(this).data('user-id');  
                console.log('Selected Partner ID (Receiver ID):', partnerId);

                const senderId = '@(ViewBag.SenderId != null ? ViewBag.SenderId : "null")';
                console.log('Sender ID from ViewBag:', senderId);

                $.ajax({
                    type: 'GET',
                    url: '/Chats/GetUserChatHistory',
                    data: {  partnerId },
                    success: function (response) {
                       
                        $('#chatHistory').empty(); 
                        let chatHistory = response.chatHistory;
                        $(chatHistory).each(function (index, item) {
                          
                            const messageClass = item.isSentByMe ? 'sent' : 'received'; 
                            let message = `<div class="chat-message ${messageClass}">
                                                        ${item.message}
                                                        <small class="chat-time">${item.date}</small>
                                            </div>`;
                            $('#chatHistory').append(message)});

                       

                        $('#sendMessageButton').data('sender-id', senderId);
                        $('#sendMessageButton').data('receiver-id', partnerId);

                        $('#chatModal').modal('show'); 
                    },
                    error: function (xhr, status, error) {
                        console.error('Error fetching chat history:', error);
                        alert('Failed to load chat history.');
                    }
                });
            });


            $('#sendMessageButton').click(function () {
                const receiverId = $(this).data('receiver-id');
                const message = $('#messageInput').val();

                if (!message.trim()) {
                    alert('Please enter a message before sending.');
                    return;
                }

                $.ajax({
                    type: 'POST',
                    url: '/Chats/SendMessage',
                    data: { receiverId, message },
                    success: function (response) {
                        if (response.success) {
                            alert('Message sent successfully!');
                            $('#messageInput').val(''); 
                            $('#chatHistory').append(`
                            <div class="chat-message sent">
                                ${message}
                                <small class="chat-time">${new Date().toLocaleString()}</small>
                            </div>
                        `);
                        } else if (response.error === "Session expired. Please log in again.") {
                            alert(response.error);
                            window.location.href = '/Users/Login';
                        } else {
                            alert(`Failed to send message: ${response.error}`);
                        }
                    },
                    error: function (xhr, status, error) {
                        alert('An error occurred while sending the message.');
                        console.error('Error:', xhr.responseText || error);
                    }
                });
            });


        });


    </script>
    @await RenderSectionAsync("Scripts", required: false)
</body>
</html>
